#include <iostream>
#include <stdlib.h>  // srand, rand
#include <algorithm> // std::sort
#include <time.h>
#include "papi.h"

namespace baseline {
#include "unsorted-data.hpp"
}

namespace optimised{
#include "sorted-data.hpp"
}


template < typename T >
    T sum_over_threshold( T const threshold )
    {
        using namespace baseline;

        T sum = 0;
        for( auto const val : input_data )
        {
            if( val >= threshold )
            {
                sum += val;
            }
        }
        return sum;
    }


int main()
{
    uint64_t sum = 0;

    clock_t start0 = clock();
    for( auto i = 0; i < 2000; ++i )
        sum += sum_over_threshold( 500llu );
    clock_t end0 = clock();
    std::cout << "sum = " << sum << std::endl;
    std::cout << "sequential time: " << (double)(end0 - start0) / CLOCKS_PER_SEC / 1000u << std::endl;

    return 0;
}
